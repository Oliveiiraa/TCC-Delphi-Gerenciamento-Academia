unit U_Cadastrar_Mensalidades;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DB, ADODB, StdCtrls, dblookup, Mask, pngimage,ComObj, ExtCtrls;

type
  Tfrm_cadasmensalidades = class(TForm)
    lbl_datavenc: TLabel;
    ADOConnectionCadasMensa: TADOConnection;
    ADOStoredProcCadasMensa: TADOStoredProc;
    ADOQueryCadasMensa: TADOQuery;
    lbl_nmcli: TLabel;
    btn_cadasmensa: TButton;
    btn_limpar: TButton;
    edt_nmcli: TEdit;
    edt_codcli: TEdit;
    MaskEditDataVenc: TMaskEdit;
    lbl_valor: TLabel;
    Label1: TLabel;
    MaskEditDataPag: TMaskEdit;
    Image1: TImage;
    Image2: TImage;
    Image3: TImage;
    ADOQueryCadasMensaCOD_CLI: TAutoIncField;
    ADOQueryCadasMensaNM_CLI: TStringField;
    ADOQueryCadasMensaEND_CLI: TStringField;
    ADOQueryCadasMensaCPF_CLI: TStringField;
    ADOQueryCadasMensaRG_CLI: TStringField;
    ADOQueryCadasMensaTEL_CLI: TStringField;
    ADOQueryCadasMensaDTMATRI_CLI: TWideStringField;
    ADOQueryCadasMensaDTNASC_CLI: TWideStringField;
    ADOQueryCadasMensaEML_CLI: TStringField;
    ADOQueryCadasMensaSTA_CLI: TBooleanField;
    ADOQueryCadasMensaSX_CLI: TStringField;
    ADOQueryCadasMensaFT_CLI: TStringField;
    ADOQueryCadasMensaTPT_CLI: TStringField;
    ADOQueryCadasMensaCOD_USU: TIntegerField;
    Image4: TImage;
    edt_valor: TEdit;
    procedure FormShow(Sender: TObject);
    procedure btn_limparClick(Sender: TObject);
    procedure btn_cadasmensaClick(Sender: TObject);
    procedure Image6Click(Sender: TObject);
    procedure Image3Click(Sender: TObject);
    procedure edt_valorChange(Sender: TObject);
    procedure edt_valorClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_cadasmensalidades: Tfrm_cadasmensalidades;

implementation

uses U_Consultar_Mensalidades, U_Cadastrar_Medidas, U_Cadastrar_Cliente;

{$R *.dfm}

procedure Tfrm_cadasmensalidades.btn_cadasmensaClick(Sender: TObject);
VAR
ano1,mes1,dia1,ano2,mes2,dia2 : string;
begin
   if MaskEditDataVenc.Text = EmptyStr then
  begin
   MessageDlg('Preencha a Data de Vencimento !',mtError,[mbOK],0);
  end;

  try
    begin
      dia2 := Copy(MaskEditDataPag.Text,1,2);
      mes2 := Copy(MaskEditDataPag.Text,4,2);
      ano2 := Copy(MaskEditDataPag.Text,7,4);
      ADOStoredProcCadasMensa.Parameters[1].Value := ano2 + '/' + mes2 + '/' + dia2;
      dia1 := Copy(MaskEditDataVenc.Text,1,2);
      mes1 := Copy(MaskEditDataVenc.Text,4,2);
      ano1 := Copy(MaskEditDataVenc.Text,7,4);
      ADOStoredProcCadasMensa.Parameters[2].Value := ano1 + '/' + mes1 + '/' + dia1;
      ADOStoredProcCadasMensa.Parameters[3].Value := edt_valor.Text;
      ADOStoredProcCadasMensa.Parameters[4].Value := edt_codcli.Text;
      //ADOStoredProcCadasMensa.Parameters[6].Value :=

      ADOStoredProcCadasMensa.ExecProc;

      U_Cadastrar_Mensalidades.frm_cadasmensalidades.ADOQueryCadasMensa.Close;
      U_Cadastrar_Mensalidades.frm_cadasmensalidades.ADOQueryCadasMensa.Open;
      U_Cadastrar_Mensalidades.frm_cadasmensalidades.ADOQueryCadasMensa.Refresh;

      MessageDlg('Mensalidade Cadastrada com Sucesso!',mtInformation,[mbOK],0);

    edt_nmcli.Clear;
    MaskEditDataVenc.Clear;
    MaskEditDataPag.Clear;
    edt_codcli.Clear;
    edt_valor.Clear;
    frm_cadasmensalidades.Close;

    end;
  finally

  end;
end;

procedure Tfrm_cadasmensalidades.btn_limparClick(Sender: TObject);
begin
  edt_nmcli.Clear;
  MaskEditDataVenc.Clear;
  MaskEditDataPag.Clear;
  edt_valor.Clear;
end;

procedure Tfrm_cadasmensalidades.edt_valorChange(Sender: TObject);
var
  s : string;
  v : double;
  I : integer;
begin
  //1º Passo : se o edit estiver vazio, nada pode ser feito.
    If (edt_valor.Text = emptystr) then
      Begin
        edt_valor.Text := '0,00';
        Exit;
      End;
    //2º Passo : obter o texto do edit, SEM a virgula e SEM o ponto decimal:
    s := '';
    for I := 1 to length(edt_valor.Text) do
        if (edt_valor.text[I] in ['0'..'9']) then
            s := s + edt_valor.text[I];

            //3º Passo : fazer com que o conteúdo do edit apresente 2 casas decimais:
            v := strtofloat(s);
            v := (v /100); // para criar 2 casa decimais

            //4º Passo : Formata o valor de (V) para aceitar valores do tipo 0,10.
            edt_valor.text := FormatFloat('#####0.00',v);
            edt_valor.SelStart := Length(edt_valor.text) ;
end;

procedure Tfrm_cadasmensalidades.edt_valorClick(Sender: TObject);
begin
    edt_valor.SelStart := Length(edt_valor.text) ;
end;

procedure Tfrm_cadasmensalidades.FormShow(Sender: TObject);
begin
 // with ADOQuery1 do
//begin
  // close;
  // sql.clear;
  // sql.add (' select * from TB_CLIENTES '); //use o comando ai cfe seu dataset
   //veja se vai impor alguma condição então use o where
  // open;
   //depois de selecionado jogue no combobox os valores
  // disablecontrols; //desabilita os controle para ir mais rapido
  // ComboBox1.items.clear; //limpa o componente para receber os dados
  // first;
  // while eof = false do
  // begin
    //  ComboBox1.items.add(DataSource1.DataSet.fieldbyname('NM_CLI').asstring);
    //  next;
   // end;
   // enablecontrols; //habilita novamente os controles
// end;

    edt_nmcli.Text := U_Cadastrar_Cliente.frm_cadastrarcli.edt_nomecli.Text;

    edt_codcli.Text :=  U_Cadastrar_Cliente.frm_cadastrarcli.ADOQueryCadascliCOD_CLI.AsString;
    MaskEditDataVenc.Clear;
    edt_valor.clear;
    MaskEditDataPag.Clear;
    MaskEditDataPag.SetFocus;
end;

procedure Tfrm_cadasmensalidades.Image3Click(Sender: TObject);
VAR
ano1,mes1,dia1,ano2,mes2,dia2,a,b,c,d,e,f : string;
WApp: variant; // variável associada ao aplicativo Microsoft Word
    WDoc: variant; // variável associada ao documento criado no Word
    path: string;
     vlr: real;
begin
  if MaskEditDataPag.Text = '  /  /    ' then
  begin
   MessageDlg('Preencha a Data de Pagamento !',mtError,[mbOK],0);
   MaskEditDataPag.SetFocus;
   Exit;
  end;

  d := copy(MaskEditDataPag.Text,1,2);
  e := copy(MaskEditDataPag.Text,4,2);
  f := copy(MaskEditDataPag.Text,7,4);

  if  d >= '32' then
  begin
    MessageDlg('Data Inválida',mtError,[mbOK],0);
    MaskEditDataPag.SetFocus;
    Exit;
  end

  else if e >= '13' then
  begin
    MessageDlg('Data Inválida',mtError,[mbOK],0);
    MaskEditDataPag.SetFocus;
    Exit;
  end

  else if MaskEditDataVenc.Text = '  /  /    ' then
  begin
   MessageDlg('Preencha a Data de Vencimento !',mtError,[mbOK],0);
   MaskEditDataVenc.SetFocus;
   Exit;
  end;

  a := copy(MaskEditDataVenc.Text,1,2);
  b := copy(MaskEditDataVenc.Text,4,2);
  c := copy(MaskEditDataVenc.Text,7,4);

  if  a >= '32' then
  begin
    MessageDlg('Data Inválida',mtError,[mbOK],0);
    MaskEditDataVenc.SetFocus;
    Exit;
  end

  else if b >= '13' then
  begin
    MessageDlg('Data Inválida',mtError,[mbOK],0);
    MaskEditDataVenc.SetFocus;
    Exit;
  end

  else if edt_valor.Text = EmptyStr then
  begin
    MessageDlg('Preencha o Valor da Mensalidade!',mtError,[mbOK],0);
    edt_valor.SetFocus;
    Exit;
  end;

  try
    begin
      dia2 := Copy(MaskEditDataPag.Text,1,2);
      mes2 := Copy(MaskEditDataPag.Text,4,2);
      ano2 := Copy(MaskEditDataPag.Text,7,4);
      ADOStoredProcCadasMensa.Parameters[1].Value := ano2 + '/' + mes2 + '/' + dia2;
      dia1 := Copy(MaskEditDataVenc.Text,1,2);
      mes1 := Copy(MaskEditDataVenc.Text,4,2);
      ano1 := Copy(MaskEditDataVenc.Text,7,4);
      ADOStoredProcCadasMensa.Parameters[2].Value := ano1 + '/' + mes1 + '/' + dia1;
      ADOStoredProcCadasMensa.Parameters[3].Value := edt_valor.text;
      ADOStoredProcCadasMensa.Parameters[4].Value := edt_codcli.Text;
      //ADOStoredProcCadasMensa.Parameters[6].Value :=

      ADOStoredProcCadasMensa.ExecProc;

      U_Cadastrar_Mensalidades.frm_cadasmensalidades.ADOQueryCadasMensa.Close;
      U_Cadastrar_Mensalidades.frm_cadasmensalidades.ADOQueryCadasMensa.Open;
      U_Cadastrar_Mensalidades.frm_cadasmensalidades.ADOQueryCadasMensa.Refresh;

      MessageDlg('Mensalidade Cadastrada com Sucesso!',mtInformation,[mbOK],0);

         if Application.MessageBox('Deseja Imprimir o Recibo?','Atenção',MB_ICONQUESTION + MB_YESNO) = IDNO then
    begin
      frm_cadasmensalidades.Close;
      edt_nmcli.Clear;
    MaskEditDataVenc.Clear;
    edt_valor.clear;
    MaskEditDataPag.Clear;
    end

    else
    begin
      // verifica se o Microsoft Word já está aberto
  if (VarIsEmpty(WApp))
   then   MessageDlg('Ligue a Impressora',mtInformation,[mbOK],0);
      WApp := CreateOleObject('Word.Application');

  path := ExtractFilePath(Application.ExeName);
// cria um documento no Word a partir do modelo do recibo
  WDoc := WApp.Documents.Open('C:\Sistema Bio Ritmo\RECIBO DE PAGAMENTO.dotx');
  WApp.Visible := True;

  try
    vlr := StrToFloat(edt_valor.Text);
// move os componentes de entrada da aplicacao Delphi
// para os campos de texto do recibo no Microsoft Word
    WDoc.FormFields.Item('Texto1').Result := edt_nmcli.Text;
    ///WDoc.FormFields.Item('Pagador').Result := edPagador.Text;
    WDoc.FormFields.Item('Texto2').Result := MaskEditDataPag.Text;
    WDoc.FormFields.Item('Texto3').Result := MaskEditDataVenc.Text;
    WDoc.FormFields.Item('Texto4').Result := Format('%m', [vlr]);
    {WDoc.FormFields.Item('Texto5').Result := edt_nmcli.Text;
    ///WDoc.FormFields.Item('Pagador').Result := edPagador.Text;
    WDoc.FormFields.Item('Texto6').Result := MaskEditDataPag.Text;
    WDoc.FormFields.Item('Texto7').Result := MaskEditDataVenc.Text;
    WDoc.FormFields.Item('Texto8').Result := Format('%m', [vlr]);
    }
    CLOSE;
    edt_nmcli.Clear;
    MaskEditDataVenc.Clear;
    edt_valor.clear;
    MaskEditDataPag.Clear;
  finally

  end;
    ///WDoc.FormFields.Item('Extenso').Result := valorPorExtenso(vlr);
    ///WDoc.FormFields.Item('Referente').Result := edReferente.Text;
    ///WDoc.FormFields.Item('Local').Result := edLocal.Text;
    ///WDoc.FormFields.Item('Assina').Result := edAssina.Text;
    end;


    ////frm_cadasmensalidades.Close;

    end;
  finally

  end;
end;

procedure Tfrm_cadasmensalidades.Image6Click(Sender: TObject);
begin
close;
end;

end.
